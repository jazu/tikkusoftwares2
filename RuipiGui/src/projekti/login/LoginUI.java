package projekti.login;


import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;

import projekti.login.User;
import projekti.sql.Tietovarasto;
import projekti.login.*;
import projekti.sql.*;
import projekti.tyontekija.*;
import projekti.projhallinta.*;


/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 * 
 * @author s1200508
 */
public class LoginUI extends javax.swing.JFrame {

	private Tietovarasto rekisteri = new Tietovarasto();

	/**
	 * Creates new form Login
	 */
	public LoginUI() {
		this.setTitle("Login");
		initComponents();
		this.setLocation(500,200);
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void kirjaudu() {

		try {
			
			User haettava = rekisteri.haeKayttaja(jTextField1.getText());
			if(haettava == null){
				 JOptionPane.showMessageDialog(null,
						  "Virheellinen Käyttäjänimi tai Salasana.", "Error",
						  JOptionPane.ERROR_MESSAGE);
				
			}
			
			else if(haettava.getPassword().equals(jPasswordField1.getText())&&haettava.getIsAdmin() == 1){
				
				this.dispose();
				ProjektiHallintaUI admin = new ProjektiHallintaUI();
				admin.setVisible(true);		
			}
			else if(haettava.getPassword().equals(jPasswordField1.getText())&& haettava.getIsAdmin() ==0){
				
				this.dispose();
				TyontekijaUI tyontekija = new TyontekijaUI();
				tyontekija.setVisible(true);
				
			}
			else{
				 JOptionPane.showMessageDialog(null,
						  "Virheellinen Käyttäjänimi tai Salasana.", "Error",
						  JOptionPane.ERROR_MESSAGE);
			}


/*
				if (jTextField1.getText().equals(users.get(i))
				 && jPasswordField1.getText().equals(passwords.get(i))
						&& admincheck.get(i) == 0
						) {


				}

				else if (jTextField1.getText().equals(users.get(i))
				 && jPasswordField1.getText().equals(passwords.get(i))
						&& admincheck.get(i) == 1) {

					this.dispose();
					ProjektiHallinta admin = new ProjektiHallinta();
					admin.setVisible(true);
					break;
					
				}/* else if (!jTextField1.getText().equals(users.get(i)) && !jPasswordField1.getText().equals(passwords.get(i))) { }
				 JOptionPane.showMessageDialog(null,
				  "Virheellinen Käyttäjänimi tai Salasana.", "Error",
				  JOptionPane.ERROR_MESSAGE); break; */
				 
				
			
			
		} catch (IndexOutOfBoundsException e) {
			JOptionPane.showMessageDialog(null,
					"Tietokantaan ei saatu yhteyttä.", "Error",
					JOptionPane.ERROR_MESSAGE);
		}

	}

	private void lopetus() {
		System.exit(0);

	}
	
    private void suoritaHaku() {
        JTextArea tulos=new JTextArea(20,40);
        for(User user:rekisteri.haeKaikkiKayttajat()) {
            tulos.append(user+"\n");
        }
        JOptionPane.showMessageDialog(this, new JScrollPane(tulos),
                                           "tulos",JOptionPane.PLAIN_MESSAGE);
    }
    
/*
	private void connectSql() {
		Connection conn = null;
		try {
			conn = DriverManager.getConnection(
					"jdbc:mysql://localhost/tikkusoftwares", "admin",
					"shibainu");

			String henkilonHakuSql = "select * from kayttajat";
			PreparedStatement henkilonHaku = conn
					.prepareStatement(henkilonHakuSql);

			ResultSet output = henkilonHaku.executeQuery();

			while (output.next()) {
				admincheck.add(output.getInt(1));
				users.add(output.getString(2));
				passwords.add(output.getString(3));
			}
			output.close();

		} catch (SQLException ex) {
			System.out.println("SQLException: " + ex.getMessage());
			System.out.println("SQLState: " + ex.getSQLState());
			System.out.println("VendorError: " + ex.getErrorCode());
		}

	}
*/
	private void initComponents() {

		jLabel1 = new javax.swing.JLabel();
		jButton1 = new javax.swing.JButton();
		jButton2 = new javax.swing.JButton();
		jTextField1 = new javax.swing.JTextField();
		jLabel2 = new javax.swing.JLabel();
		jLabel3 = new javax.swing.JLabel();
		jPasswordField1 = new javax.swing.JPasswordField();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

		jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
		jLabel1.setText("Login");

		jButton1.setText("Kirjaudu");
		jButton1.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton1ActionPerformed(evt);
				kirjaudu();
			}
		});

		jButton2.setText("Lopeta");
		jButton2.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton2ActionPerformed(evt);
				lopetus();
			}
		});

		jTextField1.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jTextField1ActionPerformed(evt);
			}
		});

		jLabel2.setText("Käyttäjänimi:");

		jLabel3.setText("Salasana:");

		jPasswordField1.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jPasswordField1ActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(
				getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						javax.swing.GroupLayout.Alignment.TRAILING,
						layout.createSequentialGroup()
								.addContainerGap(
										javax.swing.GroupLayout.DEFAULT_SIZE,
										Short.MAX_VALUE)
								.addComponent(jButton1)
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addComponent(jButton2).addGap(32, 32, 32))
				.addGroup(
						layout.createSequentialGroup()
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.LEADING)
												.addGroup(
														layout.createSequentialGroup()
																.addGap(19, 19,
																		19)
																.addComponent(
																		jLabel1,
																		javax.swing.GroupLayout.PREFERRED_SIZE,
																		290,
																		javax.swing.GroupLayout.PREFERRED_SIZE))
												.addGroup(
														layout.createSequentialGroup()
																.addGap(29, 29,
																		29)
																.addGroup(
																		layout.createParallelGroup(
																				javax.swing.GroupLayout.Alignment.LEADING,
																				false)
																				.addComponent(
																						jLabel2)
																				.addComponent(
																						jTextField1)
																				.addComponent(
																						jLabel3)
																				.addComponent(
																						jPasswordField1,
																						javax.swing.GroupLayout.DEFAULT_SIZE,
																						331,
																						Short.MAX_VALUE))))
								.addContainerGap(
										javax.swing.GroupLayout.DEFAULT_SIZE,
										Short.MAX_VALUE)));
		layout.setVerticalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						layout.createSequentialGroup()
								.addContainerGap()
								.addComponent(jLabel1,
										javax.swing.GroupLayout.PREFERRED_SIZE,
										55,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addGap(18, 18, 18)
								.addComponent(jLabel2)
								.addGap(2, 2, 2)
								.addComponent(jTextField1,
										javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
								.addComponent(jLabel3)
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addComponent(jPasswordField1,
										javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED,
										javax.swing.GroupLayout.DEFAULT_SIZE,
										Short.MAX_VALUE)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(jButton1)
												.addComponent(jButton2))
								.addContainerGap()));

		pack();
	}// </editor-fold>

	private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
	}

	private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
	}

	private void jPasswordField1ActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
	}

	private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
	}

	/**
	 * @param args
	 *            the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		// <editor-fold defaultstate="collapsed"
		// desc=" Look and feel setting code (optional) ">
		/*
		 * If Nimbus (introduced in Java SE 6) is not available, stay with the
		 * default look and feel. For details see
		 * http://download.oracle.com/javase
		 * /tutorial/uiswing/lookandfeel/plaf.html
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager
					.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(LoginUI.class.getName()).log(
					java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(LoginUI.class.getName()).log(
					java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(LoginUI.class.getName()).log(
					java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(LoginUI.class.getName()).log(
					java.util.logging.Level.SEVERE, null, ex);
		}
		// </editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new LoginUI().setVisible(true);
			}
		});
	}

	// Variables declaration - do not modify
	private javax.swing.JButton jButton1;
	private javax.swing.JButton jButton2;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JLabel jLabel3;
	private javax.swing.JPasswordField jPasswordField1;
	private javax.swing.JTextField jTextField1;
	// End of variables declaration
}
